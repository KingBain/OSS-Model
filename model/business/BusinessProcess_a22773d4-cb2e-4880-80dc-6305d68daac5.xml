<archimate:BusinessProcess
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Use Open Source Software With Modifications "
    id="a22773d4-cb2e-4880-80dc-6305d68daac5"
    documentation="Using open source software with modifications is not generally considered distribution and does not require that code be shared back.&#xD;&#xA;&#xD;&#xA;Modifications made to open source software should still be shared with the community to help ensure sustainability of the solution. See Guide for Contributing to Open Source Software.&#xD;&#xA;&#xD;&#xA;For cases where sharing modifications is mandatory, see Strong Reciprocal Implications.&#xD;&#xA;&#xD;&#xA;Don’t Fork Open Source Software&#xD;&#xA;Where possible, use open source software without modification or contribute them back.&#xD;&#xA;&#xD;&#xA;Use configuration and customize the software with modules, plugins or extensions and make those available to the community. See Guide for Publishing Open Source Code.&#xD;&#xA;&#xD;&#xA;It’s easy to copy (fork) open source software and start making changes to the source code. If a literal fork is created, which means taking a copy of the source code and maintaining your own version independently from the original project, be aware it can make future updates and security patches hard to implement. The development team that made the changes will be responsible for maintaining those changes indefinitely unless they are contributed to the upstream version, which is the original project from which the source code was taken.&#xD;&#xA;&#xD;&#xA;To make changes to open source software, engage with the community and submit changes upstream to ensure that they are supported by future updates. See Guide for Contributing to Open Source Software.&#xD;&#xA;&#xD;&#xA;Note: the term “fork” in the literal sense may be confused with the process of forking (cloning) projects on GitHub, GitLab and Bitbucket, which is critical to submit changes back to the original project.&#xD;&#xA;&#xD;&#xA;Strong Reciprocal Implications&#xD;&#xA;Strong reciprocal licences consider that software accessed through a network (like the Internet) is distribution and the modified source code must be made available to users. See Guides for Publishing Open Source Code and Contributing to Open Source Software.&#xD;&#xA;&#xD;&#xA;Strong Reciprocal Licences&#xD;&#xA;The Open Source Initiative approved licenses and the Free Software Foundation free software licences contain the following strong reciprocal licences.&#xD;&#xA;&#xD;&#xA;GNU Affero General Public License (AGPL)&#xD;&#xA;European Union Public License (EUPL)&#xD;&#xA;Open Software License (OSL)"/>
